import React, { useEffect, useState }  from 'react';
import axios from 'axios';
import {useFormik,} from 'formik';
import Head from 'next/head'
import Image from 'next/image'

type ValueType = {
    Name:string;
    Furigana:string;
    Company:string;
    Email:string;
    ContactText:string;
}

type FormError = {
    [P in keyof ValueType]?: string;
};    

const validate = (values: ValueType):FormError => {
    const errors: FormError = {};
        
    if(!values.Name){
        errors.Name = "*このフィールドは必須です"
    }else if(values.Name.length > 15){
        errors.Name = "*15文字以下で入力してください"
    }
    
    if(!values.Furigana){
        errors.Furigana = "*このフィールドは必須です"
    }else if(values.Furigana.length > 20){
        errors.Furigana = "*20文字以下で入力してください"
    }

    if(!values.Company){
        errors.Company = "*このフィールドは必須です"
    }else if(values.Company.length > 20){
        errors.Company = "*20文字以下で入力してください"
    }
    
    if(!values.Email){
        errors.Email = "*このフィールドは必須です"
    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.Email)){
        errors.Email = "*正しいメールアドレスを入力してください"
    }

    if(!values.ContactText){
        errors.ContactText = "*このフィールドは必須です"
    }else if(values.ContactText.length > 150){
        errors.ContactText = "*150文字以下で入力してください"
    }
    
    return errors;
}

const onSubmit = (values: ValueType) => {
    alert(JSON.stringify(values, null, 2)),
    location.href = '/contact-end';
};


const Home = () => {

    const formik = useFormik<ValueType>({
        initialValues: {
            Name: "",
            Furigana: "",
            Company:"",
            Email: "",
            ContactText: ""
        },
        validate: validate,
        onSubmit: onSubmit
    });
    
    const text = "#";

  return(
    <>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="Hexabase-Fabicon.png" />
        </Head>
        <main className="main">
            <div className='main-form'>
                <div className='header'>
                    <Image
                    src="#"
                    alt="copany-Logo"
                    className="Top_Logo"
                    width={350}
                    height={140}
                    priority
                    />
                    <p>以下のフォームより、お気軽にお問い合わせください。<br />お仕事のご依頼やご相談については、後日担当者よりご返信します。</p>
                </div>
                <div id='page1'>
                    <p className='fast-navi'>1,ご入力</p>
                    <p className='second-navi'>2,送信完了</p>
                </div>
            </div>
            
            <div className='contact-form'>
                <form onSubmit={formik.handleSubmit}>
                    <div id='top' className='form-grupe'>
                        <div className='label'>
                            <label htmlFor="name">
                            氏名
                            </label>
                            <p className='required'>
                            必須
                            </p>
                        </div>
                        <input 
                        name='Name'
                        type="text" 
                        className='text01'
                        onChange={formik.handleChange} 
                        value={formik.values.Name}
                        />
                        {
                        formik.touched. Name && formik.errors.Name ? 
                        <div className='Errer_Message'>
                            <p>{formik.errors.Name}</p>
                        </div>
                        : null
                        }
                    </div>
                    <div className='form-grupe'>
                        <div className='label'>
                            <label htmlFor="Furigana">
                            ふりがな
                            </label>
                            <p className='required'>
                            必須
                            </p>
                        </div>
                        <input 
                        name='Furigana'
                        type="text" 
                        className='text01'
                        onChange={formik.handleChange}
                        value={formik.values.Furigana}
                        />
                        {
                        formik.touched.Furigana && formik.errors.Furigana ? 
                        <div className='Errer_Message'>
                            <p>{formik.errors.Furigana}</p>
                        </div>
                        : null
                        }
                    </div> 
                    <div className='form-grupe'>
                        <div className='label'>
                            <label htmlFor="Company">
                            会社名
                            </label>
                            <p className='required'>
                            必須
                            </p>
                        </div>
                        <input 
                        name='Company'
                        type="text" 
                        className='text01'
                        onChange={formik.handleChange}
                        value={formik.values.Company}
                        />
                        {
                        formik.touched. Company && formik.errors.Company ? 
                        <div className='Errer_Message'>
                            <p>{formik.errors.Company}</p>
                        </div>
                        : null
                        }
                    </div>
                    <div className='form-grupe'>
                        <div className='label'>
                            <label htmlFor="Email">
                            E-Mail
                            </label>
                            <p className='required'>
                            必須
                            </p>
                        </div>
                        <input 
                        name='Email'
                        type="text" 
                        className='text01'
                        onChange={formik.handleChange}
                        value={formik.values.Email}
                        />
                        {
                        formik.touched. Email && formik.errors.Email ? 
                        <div className='Errer_Message'>
                            <p>{formik.errors.Email}</p>
                        </div>
                        : null
                        }
                    </div>
                    <div className='form-grupe'>
                        <div className='label'>
                            <label htmlFor="Contact-text">
                            ご相談内容
                            </label>
                            <p className='required'>
                            必須
                            </p>
                        </div>
                        <textarea 
                        className='text02'  
                        name='ContactText' 
                        onChange={formik.handleChange}
                        value={formik.values.ContactText}
                        />
                        {
                        formik.touched. ContactText && formik.errors.ContactText ? 
                        <div className='Errer_Message'>
                            <p>{formik.errors.ContactText}</p>
                        </div>
                        : null
                        }
                    </div>
                    <div className='form-grupe'>
                        <label>
                            <input 
                            className='chbox' 
                            type="checkbox" 
                            required />
                            <a 
                            id='text' 
                            href={text}
                            >
                            プライバシーポリシー
                            </a>
                            に同意する。
                        </label>
                    </div> 
                    <div className='bottun'>
                    <button type="submit" onSubmit={() => {formik.handleSubmit();}}>送信</button>
                    </div>
                </form>
            </div>
        </main>
    </>
  )
}
export default Home